{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'rdc_multi-collection.css' | asset_url | stylesheet_tag }}

{%- if settings.card_show_quick_buy -%}
{{ 'quick-add.css' | asset_url | stylesheet_tag }}
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- liquid
  assign section_width = section.settings.section_width
  assign columns_desktop = section.settings.columns_desktop
  assign columns_mobile = section.settings.columns_mobile
  assign stack_products = section.settings.enable_stack_products
  assign products_to_show = section.settings.products_to_show
  assign swipe_on_mobile = section.settings.swipe_on_mobile
  assign enable_overflow_visible = section.settings.enable_overflow_visible
  assign column_gap = section.settings.column_gap | append: 'rem'
  assign column_gap_mobile = section.settings.column_gap_mobile | append: 'rem'

  assign arrows = true
  if stack_products or products_to_show <= columns_desktop
    assign arrows = false
  endif
-%}
{%- capture animate_slide_in -%}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{%- endcapture -%}
{%- capture carousel_mobile -%}{%- if swipe_on_mobile -%} false {%- else -%} true {%- endif -%}{%- endcapture -%}
{%- capture right_mobile -%}
  {%- if columns_mobile == '1' -%}20%{%- else -%} {{ column_gap_mobile }} {%- endif -%}
{%- endcapture -%}

<div class="section-multi-collection section-padding section-bg isolate {% if enable_overflow_visible %} overflow-hidden {% else %} overflow-hidden lg:overflow-visible {% endif %}" {% render 'section-properties' %} >
  <div class="multi-collection {{ section_width }}" id="multi-collection-{{ section.id }}" data-id="{{ section.id }}" style="--column-product:{{ columns_desktop }};--column-product-mobile:{{ columns_mobile }};--column-gap:{{ column_gap }};--column-gap-mobile:{{ column_gap_mobile }};">
    
    {% if section.settings.heading != blank %}
      <div class="multi-collection__header">
        <{{ section.settings.heading_tag }} class="multi-collection__title {{ section.settings.heading_size_section }}">
          {{ section.settings.heading }}
        </{{ section.settings.heading_tag }}>
      </div>
    {% endif %}
    
    <div class="multi-collection__tabs" data-tabs>
      <div class="multi-collection__tabs-list">
        {%- for block in section.blocks -%}
          {%- if block.type == 'collection_tab' -%}
            <button 
              class="multi-collection__tab-button {% if forloop.first %}is-active{% endif %}" 
              data-tab="{{ block.id }}" 
              aria-controls="tab-content-{{ block.id }}" 
              aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
            >
              {{ block.settings.tab_title }}
            </button>
          {%- endif -%}
        {%- endfor -%}
      </div>
      
      <div class="multi-collection__tabs-content">
        {%- for block in section.blocks -%}
          {%- if block.type == 'collection_tab' -%}
            {%- assign collection = collections[block.settings.collection] -%}
            {%- assign products = collection.products -%}
            
            <div 
              id="tab-content-{{ block.id }}" 
              class="multi-collection__tab-panel {% if forloop.first %}is-active{% endif %}" 
              role="tabpanel" 
              aria-labelledby="tab-{{ block.id }}"
              {{ block.shopify_attributes }}
            >
              <splide-carousel>
                <div id="multi-collection-slider-{{ block.id }}"
                    class="splide-slider splide multi-collection-slider" 
                    data-splide='{"type":"slide", "speed":800, "perPage":{{ columns_desktop }},"lazyLoad": "nearby","preloadPages":1, "perMove": 1,"waitForTransition": false,"rewind":false,"updateOnMove":true,"pagination":false,"arrows":{{ arrows }},"autoplay":false,"pauseOnHover":true,"pauseOnFocus":true, "gap": "{{ column_gap }}", "destroy": {{ stack_products }},"breakpoints":{"640": {"destroy":{{ carousel_mobile }},"perPage":{{ columns_mobile }}, "arrows":false, "gap": "{{ column_gap_mobile }}", "padding":{"right":"{{ right_mobile }}"}, "perMove": 1, "speed":400 }}}' 
                    aria-labelledby="multi-collection-{{ block.id }}">
                      <div class="splide__track mb:splide-right-overflow{% if enable_overflow_visible %} splide-right-overflow {% endif %}">
                          <div class="splide__list">
                            {%- for product in products limit: products_to_show -%}
                              <div class="splide__slide">
                                <div class="{{ animate_slide_in }} h-full" {% if settings.animations_reveal_on_scroll %} data-cascade style="--animation-order:{{ forloop.index }};" {% endif %}>
                                  {%- if product.created_at != blank -%}
                                    {%- assign today_date = "now" | date: "%Y-%m-%d" -%}
                                      {%- assign product_date = product.created_at | date: "%Y-%m-%d" -%}
                                      {%- assign today_year = today_date | slice: 0, 4 | times: 1 -%}
                                      {%- assign today_month = today_date | slice: 5, 2 | times: 1 -%}
                                      {%- assign today_day = today_date | slice: 8, 2 | times: 1 -%}
                                      {%- assign product_year = product_date | slice: 0, 4 | times: 1 -%}
                                      {%- assign product_month = product_date | slice: 5, 2 | times: 1 -%}
                                      {%- assign product_day = product_date | slice: 8, 2 | times: 1 -%}
                                      
                                      {%- assign year_diff = today_year | minus: product_year -%}
                                      {%- assign month_diff = today_month | minus: product_month -%}
                                      {%- assign day_diff = today_day | minus: product_day -%}
                                      
                                      {%- assign product_age_days = year_diff | times: 365 | plus: month_diff | times: 30 | plus: day_diff -%}
                                    {%- if product_age_days < 60 -%}
                                      <div class="product-ranking product-ranking--new">
                                        <span class="product-ranking__badge product-ranking__badge--new">NOUVEAUTÉ</span>
                                      </div>
                                    {%- elsif block.settings.show_ranking and forloop.index <= 5 -%}
                                      <div class="product-ranking">
                                        <span class="product-ranking__badge">N°{{ forloop.index }} DES VENTES</span>
                                      </div>
                                    {%- endif -%}
                                  {%- endif -%}
                                  
                                  {%- capture product_placeholder -%}product-{% cycle '1', '2', '3', '4', '5', '6' %}{%- endcapture -%}
                                  {% render 'card-product', 
                                    card_product: product, 
                                    product_placeholder: product_placeholder, 
                                    section_width: section_width,
                                    columns: columns_desktop 
                                  %}
                                </div>
                              </div>
                            {%- else -%}
                              {%- for i in (1..products_to_show) -%}
                                <div class="splide__slide">
                                  <div class="{{ animate_slide_in }} h-full" {% if settings.animations_reveal_on_scroll %} data-cascade style="--animation-order: {{ forloop.index }};"{% endif %} >
                                    {%- capture product_placeholder -%}product-{% cycle '1', '2', '3', '4', '5', '6' %}{%- endcapture -%}
                                    {% render 'card-product', product_placeholder: product_placeholder %}
                                  </div>
                                </div>
                              {%- endfor -%}
                            {% endfor %}
                          </div>
                      </div>
                      <div class="splide__arrows splide__arrows--ltr no-js-hidden">
                          <button
                              class="splide__arrow splide__arrow--prev"
                              type="button"
                          >
                          {% render 'icon-arrow-right' %}
                          </button>
                          <button
                              class="splide__arrow splide__arrow--next"
                              type="button"
                          >
                          {% render 'icon-arrow-right' %}
                          </button>
                      </div>
                      {%- if section.settings.show_progress_bar and stack_products == false -%}
                        {%- if products_to_show > columns_desktop -%}
                            <div class="splide-carousel-progress w-100 lg:w-3/12 mx-auto no-js-hidden {% if swipe_on_mobile == false %} hidden lg:block {% endif %}">
                              <div class="splide-carousel-progress-bar"></div>
                            </div>
                        {%- endif -%}
                      {%- endif -%}
                </div>
              </splide-carousel>
            </div>
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tabButtons = document.querySelectorAll('.multi-collection__tab-button');
    const tabPanels = document.querySelectorAll('.multi-collection__tab-panel');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons and panels
        tabButtons.forEach(btn => btn.classList.remove('is-active'));
        tabPanels.forEach(panel => panel.classList.remove('is-active'));
        
        // Add active class to clicked button and corresponding panel
        button.classList.add('is-active');
        const tabId = button.getAttribute('data-tab');
        document.getElementById(`tab-content-${tabId}`).classList.add('is-active');
        
        // Update ARIA attributes
        tabButtons.forEach(btn => btn.setAttribute('aria-selected', 'false'));
        button.setAttribute('aria-selected', 'true');
      });
    });
  });
</script>

{% schema %}
{
  "name": "RDC Multi-collection",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer", "aside"]
  },
  "settings": [
    {
      "type": "select",
      "id": "section_width",
      "label": "Largeur",
      "options": [
        {
          "value": "container",
          "label": "Container"
        },
        {
          "value": "container-fluid",
          "label": "Étendue"
        },
        {
          "value": "w-full",
          "label": "Pleine largeur"
        }
      ],
      "default": "container"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "Meilleures ventes",
      "label": "Titre"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "label": "Balise du titre",
      "options": [
        {
          "value": "h1",
          "label": "H1"
        },
        {
          "value": "h2",
          "label": "H2"
        },
        {
          "value": "h3",
          "label": "H3"
        },
        {
          "value": "h4",
          "label": "H4"
        },
        {
          "value": "h5",
          "label": "H5"
        },
        {
          "value": "h6",
          "label": "H6"
        },
        {
          "value": "p",
          "label": "Paragraphe"
        },
        {
          "value": "div",
          "label": "Div"
        }
      ],
      "default": "h2"
    },
    {
      "type": "select",
      "id": "heading_size_section",
      "label": "Taille du titre",
      "options": [
        {
          "value": "h1",
          "label": "Titre 1"
        },
        {
          "value": "h2",
          "label": "Titre 2"
        },
        {
          "value": "h3",
          "label": "Titre 3"
        },
        {
          "value": "h4",
          "label": "Titre 4"
        },
        {
          "value": "h5",
          "label": "Titre 5"
        },
        {
          "value": "h6",
          "label": "Titre 6"
        }
      ],
      "default": "h2"
    },
    {
      "type": "header",
      "content": "Paramètres de la grille"
    },
    {
      "type": "checkbox",
      "id": "enable_stack_products",
      "label": "Empiler les produits",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_progress_bar",
      "label": "Afficher la barre de progression du carrousel",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_overflow_visible",
      "label": "Activer le débordement visible",
      "default": false
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 25,
      "step": 1,
      "default": 4,
      "label": "Produits à afficher"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "Produits par ligne (desktop)"
    },
    {
      "type": "range",
      "id": "column_gap",
      "min": 0,
      "max": 8,
      "step": 0.5,
      "default": 3,
      "unit": "rem",
      "label": "Espacement (desktop)"
    },
    {
      "type": "header",
      "content": "Mobile"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "Produits par ligne (mobile)",
      "options": [
        {
          "value": "1",
          "label": "1 colonne"
        },
        {
          "value": "2",
          "label": "2 colonnes"
        }
      ]
    },
    {
      "type": "range",
      "id": "column_gap_mobile",
      "min": 0,
      "max": 5,
      "step": 0.5,
      "default": 2,
      "unit": "rem",
      "label": "Espacement (mobile)"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "Activer le glissement sur mobile"
    },
    {
      "type": "header",
      "content": "Couleurs"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Arrière-plan"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Texte"
    },
    {
      "type": "header",
      "content": "Espacement de section"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Marge supérieure",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Marge inférieure",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "collection_tab",
      "name": "Onglet de collection",
      "limit": 5,
      "settings": [
        {
          "type": "text",
          "id": "tab_title",
          "label": "Titre de l'onglet",
          "default": "BEST SELLERS"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "checkbox",
          "id": "show_ranking",
          "label": "Afficher le classement des produits",
          "default": true,
          "info": "Affiche un badge 'N°X DES VENTES' sur les 5 premiers produits"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Multi-collection",
      "blocks": [
        {
          "type": "collection_tab",
          "settings": {
            "tab_title": "BEST SELLERS"
          }
        },
        {
          "type": "collection_tab",
          "settings": {
            "tab_title": "NOUVEAUTÉS"
          }
        },
        {
          "type": "collection_tab",
          "settings": {
            "tab_title": "VISAGE"
          }
        }
      ]
    }
  ]
}
{% endschema %}
